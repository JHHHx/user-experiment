[
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "CORS",
        "importPath": "flask_cors",
        "description": "flask_cors",
        "isExtraImport": true,
        "detail": "flask_cors",
        "documentation": {}
    },
    {
        "label": "pymysql",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pymysql",
        "description": "pymysql",
        "detail": "pymysql",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "get_db_connection",
        "kind": 2,
        "importPath": "back.server",
        "description": "back.server",
        "peekOfCode": "def get_db_connection():\n    return pymysql.connect(**db_config)\ndef get_or_create_user_id():\n    \"\"\"从请求中获取用户ID，如果不存在则创建新的\"\"\"\n    user_id = request.headers.get('X-User-ID')\n    if not user_id:\n        user_id = str(uuid.uuid4())\n    return user_id\n@app.route('/submit', methods=['POST'])\ndef submit():",
        "detail": "back.server",
        "documentation": {}
    },
    {
        "label": "get_or_create_user_id",
        "kind": 2,
        "importPath": "back.server",
        "description": "back.server",
        "peekOfCode": "def get_or_create_user_id():\n    \"\"\"从请求中获取用户ID，如果不存在则创建新的\"\"\"\n    user_id = request.headers.get('X-User-ID')\n    if not user_id:\n        user_id = str(uuid.uuid4())\n    return user_id\n@app.route('/submit', methods=['POST'])\ndef submit():\n    try:\n        data = request.json",
        "detail": "back.server",
        "documentation": {}
    },
    {
        "label": "submit",
        "kind": 2,
        "importPath": "back.server",
        "description": "back.server",
        "peekOfCode": "def submit():\n    try:\n        data = request.json\n        content = data.get('content')\n        page = data.get('page')\n        user_id = get_or_create_user_id()\n        print(f\"收到提交请求:\")\n        print(f\"  页面: {page}\")\n        print(f\"  用户ID: {user_id}\")\n        print(f\"  内容: {content}\")",
        "detail": "back.server",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "back.server",
        "description": "back.server",
        "peekOfCode": "app = Flask(__name__)\nCORS(app)\n# 调试模式标记\nDEBUG_MODE = False\n# 读取数据库配置\nwith open('db_config.json', 'r', encoding='utf-8') as f:\n    db_config = json.load(f)\ndef get_db_connection():\n    return pymysql.connect(**db_config)\ndef get_or_create_user_id():",
        "detail": "back.server",
        "documentation": {}
    },
    {
        "label": "DEBUG_MODE",
        "kind": 5,
        "importPath": "back.server",
        "description": "back.server",
        "peekOfCode": "DEBUG_MODE = False\n# 读取数据库配置\nwith open('db_config.json', 'r', encoding='utf-8') as f:\n    db_config = json.load(f)\ndef get_db_connection():\n    return pymysql.connect(**db_config)\ndef get_or_create_user_id():\n    \"\"\"从请求中获取用户ID，如果不存在则创建新的\"\"\"\n    user_id = request.headers.get('X-User-ID')\n    if not user_id:",
        "detail": "back.server",
        "documentation": {}
    }
]